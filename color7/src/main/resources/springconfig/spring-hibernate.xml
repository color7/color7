<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

	<!-- 配置数据源 -->
	<bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url" value="${jdbc_url}" />
		<property name="username" value="${jdbc_username}" />
		<property name="password" value="${jdbc_password}" />

		<!-- 初始化连接大小 -->
		<property name="initialSize" value="0" />
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="20" />
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="0" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="60000" />

		<!-- 验证数据库连接的有效性 -->
		<property name="validationQuery" value="${validationQuery}" />
		<!-- 申请连接时执行validationQuery检测连接是否有效, 做了这个配置会降低性能 -->
		<property name="testOnBorrow" value="false" />
		<!-- 归还连接时执行validationQuery检测连接是否有效, 做了这个配置会降低性能 -->
		<property name="testOnReturn" value="false" />
		<!-- 建议配置为true,不影响性能,并且保证安全性.申请连接的时候检测,如果空闲时间大于 timeBetweenEvictionRunsMillis， 
			执行validationQuery检测连接是否有效 -->
		<property name="testWhileIdle" value="true" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="25200000" />


		<!-- removeAbandoned,removeAbandonedTimeout,logAbandoned是连接池的高级功能, 理论上这些配置不应该出现在实际的生产环境 -->
		<!-- 打开removeAbandoned功能,设定一种机制,当程序编写者在从连接池中获取连接使用后忘记了连接的关闭,当连接池连接数到达某个数量时,会启动连接回收 -->
		<property name="removeAbandoned" value="true" />
		<!-- 活动时间超过removeAbandonedTimeout="1800"(30分钟)的连接将会被回收 -->
		<property name="removeAbandonedTimeout" value="1800" />
		<!--程序在回收连接的同时会打印日志 -->
		<property name="logAbandoned" value="true" />

		<!-- 监控数据库 -->
		<property name="filters" value="stat,wall" />
	</bean>

	<!-- 配置hibernate session工厂 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<!-- web项目启动时是否更新表结构 -->
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<!-- 系统使用的数据库方言，也就是使用的数据库类型 -->
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<!-- 是否打印Hibernate生成的SQL到控制台 -->
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<!-- 是否格式化打印出来的SQL -->
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
			</props>
		</property>

		<!-- 自动扫描hbm方式配置的hibernate文件和.hbm文件 -->
		<property name="mappingDirectoryLocations">
			<list>
				<!-- 这里改为我们的hibernate配置文件的目录 -->
				<value>classpath:hibernateconfig</value>
			</list>
		</property>
	</bean>

	<!-- 配置事务管理器 -->
	<!-- <bean name="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager"> 
		<property name="sessionFactory" ref="sessionFactory"></property> </bean> -->


	<!-- 拦截器方式配置事务 -->
	<!-- <tx:advice id="transactionAdvice" transaction-manager="transactionManager"> 
		<tx:attributes> 以如下关键字开头的方法使用事务 <tx:method name="add*" /> <tx:method name="save*" 
		/> <tx:method name="update*" /> <tx:method name="modify*" /> <tx:method name="edit*" 
		/> <tx:method name="delete*" /> <tx:method name="remove*" /> 以如下关键字开头的方法不使用事物 
		<tx:method name="get*" propagation="SUPPORTS" /> <tx:method name="find*" 
		propagation="SUPPORTS" /> <tx:method name="load*" propagation="SUPPORTS" 
		/> <tx:method name="search*" propagation="SUPPORTS" /> <tx:method name="datagrid*" 
		propagation="SUPPORTS" /> 其他方法不使用事物 <tx:method name="*" propagation="SUPPORTS" 
		/> </tx:attributes> </tx:advice> -->
	<!-- 切面，将事物用在哪些对象上 -->
	<!-- <aop:config> <aop:pointcut id="transactionPointcut" expression="execution(* 
		me.gacl.service..*Impl.*(..))" /> <aop:advisor pointcut-ref="transactionPointcut" 
		advice-ref="transactionAdvice" /> </aop:config> -->


</beans>
